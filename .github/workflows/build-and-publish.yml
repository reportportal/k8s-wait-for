name: Build and Deploy

on:
  push:
    branches: ["master"]
    # Publish semver tags as releases.
    tags: [ "v*.*.*" ]
    paths-ignore:
      - README.md
      - LICENSE
      - .github/**
  pull_request:
    branches: ["master"]
  release:
    types: ["created"]
  workflow_dispatch: {}
env:
  TARGET: linux/arm64,linux/amd64

jobs:
  scan:
    name: Scan Docker image
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          # Need tags for Makefile logic to work
          fetch-depth: 0
      - name: Build the Docker images
        run: |
          docker build -t docker.io/reportportal/k8s-wait-for:${{ github.sha }} .
      - name: Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: 'docker.io/reportportal/k8s-wait-for:${{ github.sha }}'
          format: 'sarif'
          severity: 'CRITICAL,HIGH'
          output: 'trivy-results.sarif'
      - name: Upload Trivy scan results to GitHub Security tab
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: 'trivy-results.sarif'

  deploy:
    name: Release to Docker Hub and GitHub Container Registry
    needs: [ "scan" ]
    runs-on: ubuntu-latest
    if: github.event_name == 'release' && github.event.action == 'created'
    steps:
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.REGESTRY_USERNAME }}
          password: ${{ secrets.REGESTRY_PASSWORD }}
      - uses: actions/checkout@v4
        with:
          # Need tags for Makefile logic to work
          fetch-depth: 0
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
        
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Set up Args
        id: args
        run: |
          echo "DATE=$(date -u +'%Y-%m-%dT%H:%M:%SZ')" >> $GITHUB_OUTPUT
          # echo "VERSION=$(shell git describe --tags --always) >> $GITHUB_OUTPUT
  
      - name: Build
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          build-args: |
            BUILD_DATE=${{ steps.args.outputs.DATE }}
          platforms: ${{ env.TARGET }}
          tags: |
            docker.io/${{ github.repository }}:latest
            docker.io/${{ github.repository }}:${{ github.ref_name }}
name: Build and Deploy

on:
  push:
    branches: ["master"]
    # Publish semver tags as releases.
    tags: [ "v*.*.*" ]
  pull_request:
    branches: ["master"]
  release:
    types: ["created"]
  workflow_dispatch: {}
env:
  TARGET: linux/arm64,linux/amd64
  BUILD_FLAGS: --no-cache

jobs:
  build:
    name: Build testing
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          # Need tags for Makefile logic to work
          fetch-depth: 0
      - name: Build the Docker images
        env:
          TARGET: linux/amd64
          BUILD_FLAGS: ${{ env.BUILD_FLAGS }} --load
        run: make images
  scan:
    name: Scan for vulnerabilities
    needs: [ "build" ]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          # Need tags for Makefile logic to work
          fetch-depth: 0
      - name: Build the Docker image for Trivy
        env:
            # amd build so that local 'docker images' can access images
            TARGET: linux/amd64
            BUILD_FLAGS: ${{ env.BUILD_FLAGS }} --load
        run: make images
      - name: Run Trivy Vulnerability Scanner for Root Image
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: 'ghcr.io/reportportal/k8s-wait-for:latest'
          exit-code: 1
          format: 'sarif'
          output: 'trivy-results-root.sarif'
          skip-files: /usr/local/bin/kubectl
      - name: Run Trivy Vulnerability Scanner for Non-Root Image
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: 'ghcr.io/reportportal/k8s-wait-for:no-root-latest'
          exit-code: 1
          format: 'sarif'
          output: 'trivy-results-non-root.sarif'
          skip-files: /usr/local/bin/kubectl
      # just upload root scan results
      - name: Upload Trivy Scan Results to GitHub Security Tab
        uses: github/codeql-action/upload-sarif@v3
        if: always()
        with:
          sarif_file: 'trivy-results-root.sarif'

  deploy:
    name: Deploy to Docker Hub and GitHub Container Registry
    needs: [ "scan" ]
    runs-on: ubuntu-latest
    if: github.event_name == 'release' && github.event.action == 'created'
    steps:
      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GH_TOKEN }}
      - uses: actions/checkout@v2
        with:
          # Need tags for Makefile logic to work
          fetch-depth: 0
      - name: Build and Push Docker Images
        env:
          TARGET: ${{ env.TARGET }}
          BUILD_FLAGS: ${{ env.BUILD_FLAGS }}
        run: make push
